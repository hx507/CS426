Terminals unused in grammar

   IN
   LET
   CASE
   ESAC
   OF
   NEW
   ISVOID
   STR_CONST
   INT_CONST
   BOOL_CONST
   NOT
   LE
   ERROR


State 55 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: %empty
    7             | non_empty_feature_list

    8 non_empty_feature_list: feature ';'
    9                       | non_empty_feature_list feature

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}'
   11        | OBJECTID ':' TYPEID
   12        | OBJECTID ':' TYPEID DARROW expression

   13 formal_list: %empty
   14            | non_empty_formal_list

   15 non_empty_formal_list: formal
   16                      | non_empty_formal_list ',' formal

   17 formal: OBJECTID ':' TYPEID

   18 param_list: %empty
   19           | non_empty_param_list

   20 non_empty_param_list: expression
   21                     | non_empty_param_list ',' expression

   22 stmt_list: %empty
   23          | non_empty_stmt_list

   24 non_empty_stmt_list: expression ';'
   25                    | non_empty_stmt_list expression

   26 expression: OBJECTID ASSIGN expression
   27           | expression '.' OBJECTID '(' param_list ')'
   28           | expression '@' TYPEID '.' OBJECTID '(' param_list ')'
   29           | OBJECTID '(' param_list ')'
   30           | IF expression THEN expression ELSE expression FI
   31           | WHILE expression LOOP expression POOL
   32           | '{' stmt_list '}'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 27 28 29
')' (41) 10 27 28 29
',' (44) 16 21
'.' (46) 27 28
':' (58) 10 11 12 17
';' (59) 4 5 8 24
'@' (64) 28
'{' (123) 4 5 10 32
'}' (125) 4 5 10 32
error (256)
CLASS (258) 4 5
ELSE (259) 30
FI (260) 30
IF (261) 30
IN (262)
INHERITS (263) 5
LET (264)
LOOP (265) 31
POOL (266) 31
THEN (267) 30
WHILE (268) 31
CASE (269)
ESAC (270)
OF (271)
DARROW (272) 12
NEW (273)
ISVOID (274)
STR_CONST (275)
INT_CONST (276)
BOOL_CONST (277)
TYPEID (278) 4 5 10 11 12 17 28
OBJECTID (279) 10 11 12 17 26 27 28 29
ASSIGN (280) 26
NOT (281)
LE (282)
ERROR (283)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
class_list (40)
    on left: 2 3, on right: 1 3
class (41)
    on left: 4 5, on right: 2 3
feature_list (42)
    on left: 6 7, on right: 4 5
non_empty_feature_list (43)
    on left: 8 9, on right: 7 9
feature (44)
    on left: 10 11 12, on right: 8 9
formal_list (45)
    on left: 13 14, on right: 10
non_empty_formal_list (46)
    on left: 15 16, on right: 14 16
formal (47)
    on left: 17, on right: 15 16
param_list (48)
    on left: 18 19, on right: 27 28 29
non_empty_param_list (49)
    on left: 20 21, on right: 19 21
stmt_list (50)
    on left: 22 23, on right: 32
non_empty_stmt_list (51)
    on left: 24 25, on right: 23 25
expression (52)
    on left: 26 27 28 29 30 31 32, on right: 10 12 20 21 24 25 26 27
    28 30 31


State 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: CLASS . TYPEID '{' feature_list '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


State 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


State 5

    4 class: CLASS TYPEID . '{' feature_list '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


State 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


State 9

    4 class: CLASS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    $default  reduce using rule 6 (feature_list)

    feature_list            go to state 12
    non_empty_feature_list  go to state 13
    feature                 go to state 14


State 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 15


State 11

   10 feature: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expression '}'
   11        | OBJECTID . ':' TYPEID
   12        | OBJECTID . ':' TYPEID DARROW expression

    '('  shift, and go to state 16
    ':'  shift, and go to state 17


State 12

    4 class: CLASS TYPEID '{' feature_list . '}' ';'

    '}'  shift, and go to state 18


State 13

    7 feature_list: non_empty_feature_list .
    9 non_empty_feature_list: non_empty_feature_list . feature

    OBJECTID  shift, and go to state 11

    $default  reduce using rule 7 (feature_list)

    feature  go to state 19


State 14

    8 non_empty_feature_list: feature . ';'

    ';'  shift, and go to state 20


State 15

    5 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    OBJECTID  shift, and go to state 11

    $default  reduce using rule 6 (feature_list)

    feature_list            go to state 21
    non_empty_feature_list  go to state 13
    feature                 go to state 14


State 16

   10 feature: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expression '}'

    OBJECTID  shift, and go to state 22

    $default  reduce using rule 13 (formal_list)

    formal_list            go to state 23
    non_empty_formal_list  go to state 24
    formal                 go to state 25


State 17

   11 feature: OBJECTID ':' . TYPEID
   12        | OBJECTID ':' . TYPEID DARROW expression

    TYPEID  shift, and go to state 26


State 18

    4 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 27


State 19

    9 non_empty_feature_list: non_empty_feature_list feature .

    $default  reduce using rule 9 (non_empty_feature_list)


State 20

    8 non_empty_feature_list: feature ';' .

    $default  reduce using rule 8 (non_empty_feature_list)


State 21

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'

    '}'  shift, and go to state 28


State 22

   17 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 29


State 23

   10 feature: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expression '}'

    ')'  shift, and go to state 30


State 24

   14 formal_list: non_empty_formal_list .
   16 non_empty_formal_list: non_empty_formal_list . ',' formal

    ','  shift, and go to state 31

    $default  reduce using rule 14 (formal_list)


State 25

   15 non_empty_formal_list: formal .

    $default  reduce using rule 15 (non_empty_formal_list)


State 26

   11 feature: OBJECTID ':' TYPEID .
   12        | OBJECTID ':' TYPEID . DARROW expression

    DARROW  shift, and go to state 32

    $default  reduce using rule 11 (feature)


State 27

    4 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 4 (class)


State 28

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 33


State 29

   17 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 34


State 30

   10 feature: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expression '}'

    ':'  shift, and go to state 35


State 31

   16 non_empty_formal_list: non_empty_formal_list ',' . formal

    OBJECTID  shift, and go to state 22

    formal  go to state 36


State 32

   12 feature: OBJECTID ':' TYPEID DARROW . expression

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    expression  go to state 41


State 33

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


State 34

   17 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 17 (formal)


State 35

   10 feature: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expression '}'

    TYPEID  shift, and go to state 42


State 36

   16 non_empty_formal_list: non_empty_formal_list ',' formal .

    $default  reduce using rule 16 (non_empty_formal_list)


State 37

   30 expression: IF . expression THEN expression ELSE expression FI

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    expression  go to state 43


State 38

   31 expression: WHILE . expression LOOP expression POOL

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    expression  go to state 44


State 39

   26 expression: OBJECTID . ASSIGN expression
   29           | OBJECTID . '(' param_list ')'

    ASSIGN  shift, and go to state 45
    '('     shift, and go to state 46


State 40

   32 expression: '{' . stmt_list '}'

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    $default  reduce using rule 22 (stmt_list)

    stmt_list            go to state 47
    non_empty_stmt_list  go to state 48
    expression           go to state 49


State 41

   12 feature: OBJECTID ':' TYPEID DARROW expression .
   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'

    '.'  shift, and go to state 50
    '@'  shift, and go to state 51

    $default  reduce using rule 12 (feature)


State 42

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expression '}'

    '{'  shift, and go to state 52


State 43

   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'
   30           | IF expression . THEN expression ELSE expression FI

    THEN  shift, and go to state 53
    '.'   shift, and go to state 50
    '@'   shift, and go to state 51


State 44

   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'
   31           | WHILE expression . LOOP expression POOL

    LOOP  shift, and go to state 54
    '.'   shift, and go to state 50
    '@'   shift, and go to state 51


State 45

   26 expression: OBJECTID ASSIGN . expression

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    expression  go to state 55


State 46

   29 expression: OBJECTID '(' . param_list ')'

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    $default  reduce using rule 18 (param_list)

    param_list            go to state 56
    non_empty_param_list  go to state 57
    expression            go to state 58


State 47

   32 expression: '{' stmt_list . '}'

    '}'  shift, and go to state 59


State 48

   23 stmt_list: non_empty_stmt_list .
   25 non_empty_stmt_list: non_empty_stmt_list . expression

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    $default  reduce using rule 23 (stmt_list)

    expression  go to state 60


State 49

   24 non_empty_stmt_list: expression . ';'
   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'

    ';'  shift, and go to state 61
    '.'  shift, and go to state 50
    '@'  shift, and go to state 51


State 50

   27 expression: expression '.' . OBJECTID '(' param_list ')'

    OBJECTID  shift, and go to state 62


State 51

   28 expression: expression '@' . TYPEID '.' OBJECTID '(' param_list ')'

    TYPEID  shift, and go to state 63


State 52

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expression '}'

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    expression  go to state 64


State 53

   30 expression: IF expression THEN . expression ELSE expression FI

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    expression  go to state 65


State 54

   31 expression: WHILE expression LOOP . expression POOL

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    expression  go to state 66


State 55

   26 expression: OBJECTID ASSIGN expression .
   27           | expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'

    '.'  shift, and go to state 50
    '@'  shift, and go to state 51

    '.'       [reduce using rule 26 (expression)]
    '@'       [reduce using rule 26 (expression)]
    $default  reduce using rule 26 (expression)


State 56

   29 expression: OBJECTID '(' param_list . ')'

    ')'  shift, and go to state 67


State 57

   19 param_list: non_empty_param_list .
   21 non_empty_param_list: non_empty_param_list . ',' expression

    ','  shift, and go to state 68

    $default  reduce using rule 19 (param_list)


State 58

   20 non_empty_param_list: expression .
   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'

    '.'  shift, and go to state 50
    '@'  shift, and go to state 51

    $default  reduce using rule 20 (non_empty_param_list)


State 59

   32 expression: '{' stmt_list '}' .

    $default  reduce using rule 32 (expression)


State 60

   25 non_empty_stmt_list: non_empty_stmt_list expression .
   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'

    '.'  shift, and go to state 50
    '@'  shift, and go to state 51

    $default  reduce using rule 25 (non_empty_stmt_list)


State 61

   24 non_empty_stmt_list: expression ';' .

    $default  reduce using rule 24 (non_empty_stmt_list)


State 62

   27 expression: expression '.' OBJECTID . '(' param_list ')'

    '('  shift, and go to state 69


State 63

   28 expression: expression '@' TYPEID . '.' OBJECTID '(' param_list ')'

    '.'  shift, and go to state 70


State 64

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression . '}'
   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'

    '}'  shift, and go to state 71
    '.'  shift, and go to state 50
    '@'  shift, and go to state 51


State 65

   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'
   30           | IF expression THEN expression . ELSE expression FI

    ELSE  shift, and go to state 72
    '.'   shift, and go to state 50
    '@'   shift, and go to state 51


State 66

   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'
   31           | WHILE expression LOOP expression . POOL

    POOL  shift, and go to state 73
    '.'   shift, and go to state 50
    '@'   shift, and go to state 51


State 67

   29 expression: OBJECTID '(' param_list ')' .

    $default  reduce using rule 29 (expression)


State 68

   21 non_empty_param_list: non_empty_param_list ',' . expression

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    expression  go to state 74


State 69

   27 expression: expression '.' OBJECTID '(' . param_list ')'

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    $default  reduce using rule 18 (param_list)

    param_list            go to state 75
    non_empty_param_list  go to state 57
    expression            go to state 58


State 70

   28 expression: expression '@' TYPEID '.' . OBJECTID '(' param_list ')'

    OBJECTID  shift, and go to state 76


State 71

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' .

    $default  reduce using rule 10 (feature)


State 72

   30 expression: IF expression THEN expression ELSE . expression FI

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    expression  go to state 77


State 73

   31 expression: WHILE expression LOOP expression POOL .

    $default  reduce using rule 31 (expression)


State 74

   21 non_empty_param_list: non_empty_param_list ',' expression .
   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'

    '.'  shift, and go to state 50
    '@'  shift, and go to state 51

    $default  reduce using rule 21 (non_empty_param_list)


State 75

   27 expression: expression '.' OBJECTID '(' param_list . ')'

    ')'  shift, and go to state 78


State 76

   28 expression: expression '@' TYPEID '.' OBJECTID . '(' param_list ')'

    '('  shift, and go to state 79


State 77

   27 expression: expression . '.' OBJECTID '(' param_list ')'
   28           | expression . '@' TYPEID '.' OBJECTID '(' param_list ')'
   30           | IF expression THEN expression ELSE expression . FI

    FI   shift, and go to state 80
    '.'  shift, and go to state 50
    '@'  shift, and go to state 51


State 78

   27 expression: expression '.' OBJECTID '(' param_list ')' .

    $default  reduce using rule 27 (expression)


State 79

   28 expression: expression '@' TYPEID '.' OBJECTID '(' . param_list ')'

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    OBJECTID  shift, and go to state 39
    '{'       shift, and go to state 40

    $default  reduce using rule 18 (param_list)

    param_list            go to state 81
    non_empty_param_list  go to state 57
    expression            go to state 58


State 80

   30 expression: IF expression THEN expression ELSE expression FI .

    $default  reduce using rule 30 (expression)


State 81

   28 expression: expression '@' TYPEID '.' OBJECTID '(' param_list . ')'

    ')'  shift, and go to state 82


State 82

   28 expression: expression '@' TYPEID '.' OBJECTID '(' param_list ')' .

    $default  reduce using rule 28 (expression)
